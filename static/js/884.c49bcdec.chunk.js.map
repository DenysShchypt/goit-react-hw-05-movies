{"version":3,"file":"static/js/884.c49bcdec.chunk.js","mappings":"mTACAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAmB,mCAAG,oGACDD,EAAAA,EAAAA,IAAA,6EADC,cAClBE,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,qDAKnBC,EAAiB,mCAAG,WAAOC,GAAP,uFACCN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,6DADD,cAChBJ,EADgB,yBAEfA,GAFe,2CAAH,sDAKjBK,EAAiB,mCAAG,WAAOC,EAAMC,GAAb,uFACCT,EAAAA,EAAAA,IAAA,gCACxBQ,EADwB,6FACkEC,IAFnE,cAChBP,EADgB,yBAGfA,EAASC,KAAKC,SAHC,2CAAH,wDAMjBM,EAAY,mCAAG,WAAOJ,GAAP,uFACMN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,4EADN,cACXJ,EADW,yBAEVA,EAASC,KAAKC,QAAQ,IAFZ,2CAAH,sDAKZO,EAAY,mCAAG,WAAOL,GAAP,uFACMN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,qEADN,cACXJ,EADW,yBAEVA,EAASC,KAAKS,MAFJ,2CAAH,qD,gKCnBZC,GAAeC,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IACpBC,GAASD,EAAAA,EAAAA,OAAK,kBAAM,oDAAN,IAGL,SAASE,IAAgB,IAAD,IACrC,GAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAA4CN,EAAAA,EAAAA,UAAS,IAArD,eAAOO,EAAP,KAAuBC,EAAvB,KACA,GAAgCR,EAAAA,EAAAA,UAAS,IAAzC,eAAOS,EAAP,KAAiBC,EAAjB,KACA,GAAsCV,EAAAA,EAAAA,UAAS,IAA/C,eAAOW,EAAP,KAAoBC,EAApB,KAEMC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAErC3B,GAAY4B,EAAAA,EAAAA,MAAZ5B,QAuBR,OArBA6B,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAEIhB,GAAa,GACbE,GAAS,GAHb,UAI+BhB,EAAAA,EAAAA,IAAkBC,GAJjD,OAIU8B,EAJV,SAMMA,EAAajC,KADPmB,EALZ,EAKYA,MAAOE,EALnB,EAKmBA,eAAgBE,EALnC,EAKmCA,SAAUE,EAL7C,EAK6CA,YAEzCC,EAAeD,GACfL,EAASD,GACTG,EAAkBD,GAClBG,EAAYD,GAVhB,kDAYIL,GAAS,GAZb,yBAcIF,GAAa,GAdjB,8EADc,uBAAC,WAAD,wBAkBdkB,EACD,GAAE,CAAC/B,KAGF,4BACE,SAAC,KAAD,CAAMgC,GAAIR,EAAV,SAAwB,cACvBZ,IAAa,SAACH,EAAD,KACd,4BACE,wBAAKO,KACP,gBACIiB,IACEX,EAAW,0CAC4BA,GA5CjC,8EA+CRY,MAAO,IACPC,IAAI,YAEN,uBAAIjB,KACJ,uBAAIE,QAEN,2BACE,yBACE,SAAC,KAAD,CAAMY,GAAG,OAAT,SAAgB,YAElB,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,kBAGvB,SAAC,EAAAI,SAAD,CAAUC,UAAU,SAAC5B,EAAD,IAApB,UACE,SAAC,KAAD,MAEDK,IACC,SAACP,EAAD,UAAc,uDAMrB,C","sources":["Api.js","pages/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\n\nconst fetchTrendingMovies = async () => {\n    const response = await axios.get(`/trending/all/day?api_key=020a69ea7370c77aa06eca2a5130dadb&language=en-US`)\n    return response.data.results\n};\n\nconst fetchDetailsMovie = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}?api_key=020a69ea7370c77aa06eca2a5130dadb&language=en-US`)\n    return response\n};\n\nconst fetchSearchMovies = async (query,page) => {\n    const response = await axios.get(`/search/movie?query\n=${query}&include_adult=false&api_key=020a69ea7370c77aa06eca2a5130dadb&language=en-US&page=${page}`)\n    return response.data.results\n};\n\nconst fetchReviews = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/reviews?api_key=020a69ea7370c77aa06eca2a5130dadb&language=en-US&page=1`)\n    return response.data.results[0]\n};\n\nconst fetchCredits = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/credits?api_key=020a69ea7370c77aa06eca2a5130dadb&language=en-US`)\n    return response.data.cast\n};\n\n\nexport { fetchTrendingMovies, fetchDetailsMovie, fetchSearchMovies, fetchReviews, fetchCredits };","import React, { Suspense, lazy } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchDetailsMovie } from 'Api';\n\nconst ErrorMessage = lazy(() => import('components/ErrorMessage'));\nconst Loader = lazy(() => import('components/Loader/Loader'));\nconst defaultImg ='https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nexport default function MovieDetails() {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [title, setTitle] = useState('');\n  const [original_title, setOriginal_title] = useState('');\n  const [overview, setOverview] = useState('');\n  const [poster_path, setPoster_path] = useState('');\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchRequest() {\n      try {\n        setIsLoading(true);\n        setError(false);\n        const detailsMovie = await fetchDetailsMovie(movieId);\n        const { title, original_title, overview, poster_path } =\n          detailsMovie.data;\n        setPoster_path(poster_path);\n        setTitle(title);\n        setOriginal_title(original_title);\n        setOverview(overview);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchRequest();\n  }, [movieId]);\n\n  return (\n    <div>\n      <Link to={backLinkHref}>Turn back</Link>\n      {isLoading && <Loader />}\n      <div>\n        <h2>{title}</h2>\n      <img\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n              : defaultImg\n          }\n          width={250}\n          alt=\"poster\"\n        />\n        <p>{original_title}</p>\n        <p>{overview}</p>\n      </div>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n      {error && (\n        <ErrorMessage>\n          Sorry, there is no information about this movie!\n        </ErrorMessage>\n      )}\n    </div>\n  );\n}\n"],"names":["axios","fetchTrendingMovies","response","data","results","fetchDetailsMovie","movieId","fetchSearchMovies","query","page","fetchReviews","fetchCredits","cast","ErrorMessage","lazy","Loader","MovieDetails","useState","isLoading","setIsLoading","error","setError","title","setTitle","original_title","setOriginal_title","overview","setOverview","poster_path","setPoster_path","backLinkHref","useLocation","state","from","useParams","useEffect","detailsMovie","fetchRequest","to","src","width","alt","Suspense","fallback"],"sourceRoot":""}