{"version":3,"file":"static/js/415.b55ecffd.chunk.js","mappings":"mTACAA,EAAAA,EAAAA,SAAAA,QAAyB,+BAEzB,IAAMC,EAAmB,mCAAG,oGACDD,EAAAA,EAAAA,IAAA,6EADC,cAClBE,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,qDAKnBC,EAAiB,mCAAG,WAAOC,GAAP,uFACCN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,6DADD,cAChBJ,EADgB,yBAEfA,GAFe,2CAAH,sDAKjBK,EAAiB,mCAAG,WAAOC,GAAP,uFACCR,EAAAA,EAAAA,IAAA,gCACxBQ,EADwB,wFADD,cAChBN,EADgB,yBAGfA,EAASC,KAAKC,SAHC,2CAAH,sDAMjBK,EAAY,mCAAG,WAAOH,GAAP,uFACMN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,4EADN,cACXJ,EADW,yBAEVA,EAASC,KAAKC,QAAQ,IAFZ,2CAAH,sDAKZM,EAAY,mCAAG,WAAOJ,GAAP,uFACMN,EAAAA,EAAAA,IAAA,iBAAoBM,EAApB,qEADN,cACXJ,EADW,yBAEVA,EAASC,KAAKQ,MAFJ,2CAAH,qD,sJCpBZC,GAAeC,EAAAA,EAAAA,OAAK,kBAAM,6BAAN,IACpBC,GAAaD,EAAAA,EAAAA,OAAK,kBAAI,6BAAJ,IAClBE,GAASF,EAAAA,EAAAA,OAAK,kBAAM,oDAAN,IAEL,SAASG,IACtB,OAAkCC,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAoDJ,EAAAA,EAAAA,UAAS,IAA7D,eAAMK,EAAN,KAA2BC,EAA3B,KA4BA,OA1BAC,EAAAA,EAAAA,YAAU,WAAM,wCAEd,oGAEIL,GAAa,GACbE,GAAS,GAHb,UAIgCpB,EAAAA,EAAAA,MAJhC,QAIUwB,EAJV,QAMsBC,OAAS,GACzBC,EAAAA,EAAAA,IAAM,qCAAsC,CAC1CC,SAAU,MAGZD,EAAAA,GAAAA,QAAc,sBAGhBJ,EAAwBE,GAd5B,kDAgBIJ,GAAS,GAhBb,yBAkBIF,GAAa,GAlBjB,8EAFc,uBAAC,WAAD,wBAuBdU,EACD,GAAE,KAGD,gCACCX,IAAa,SAACH,EAAD,KACd,SAACD,EAAD,CAAYZ,SAAUoB,IACrBF,IACG,SAACR,EAAD,UAAc,8DAIlB,SAAC,KAAD,CAASkB,SAAS,gBAGrB,C","sources":["Api.js","pages/Home.jsx"],"sourcesContent":["import axios from \"axios\";\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\n\nconst fetchTrendingMovies = async () => {\n    const response = await axios.get(`/trending/all/day?api_key=020a69ea7370c77aa06eca2a5130dadb&language=en-US`)\n    return response.data.results\n};\n\nconst fetchDetailsMovie = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}?api_key=020a69ea7370c77aa06eca2a5130dadb&language=en-US`)\n    return response\n};\n\nconst fetchSearchMovies = async (query) => {\n    const response = await axios.get(`/search/movie?query\n=${query}&include_adult=false&api_key=020a69ea7370c77aa06eca2a5130dadb&language=en-US&page=1`)\n    return response.data.results\n};\n\nconst fetchReviews = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/reviews?api_key=020a69ea7370c77aa06eca2a5130dadb&language=en-US&page=1`)\n    return response.data.results[0]\n};\n\nconst fetchCredits = async (movieId) => {\n    const response = await axios.get(`/movie/${movieId}/credits?api_key=020a69ea7370c77aa06eca2a5130dadb&language=en-US`)\n    return response.data.cast\n};\n\n\nexport { fetchTrendingMovies, fetchDetailsMovie, fetchSearchMovies, fetchReviews, fetchCredits };","import {fetchTrendingMovies} from \"Api\";\nimport toast, { Toaster } from 'react-hot-toast';\nimport { lazy, useEffect, useState } from \"react\";\n\nconst ErrorMessage = lazy(() => import('components/ErrorMessage'));\nconst MoviesList = lazy(()=>import(\"components/MoviesList/MoviesList\"));\nconst Loader = lazy(() => import('components/Loader/Loader'));\n\nexport default function Home(){\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const[galleryPopularMovies,setGalleryPopularMovies]=useState([]);\n\n  useEffect(() => {\n\n    async function fetchRequest() {\n      try {\n        setIsLoading(true);\n        setError(false);\n        const popularMovies = await fetchTrendingMovies ();\n        \n        if (popularMovies.length < 1) {\n          toast('Nothing was found for this request', {\n            duration: 6000,\n          });\n        } else {\n          toast.success('Successful request');\n        }\n\n        setGalleryPopularMovies(popularMovies)\n      } catch (error) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchRequest();\n  }, []);\n\n  return (\n    <>\n    {isLoading && <Loader />}\n    <MoviesList response={galleryPopularMovies}/>\n    {error && (\n        <ErrorMessage>\n          Whoops, something went wrong! Please reload this page!!!\n        </ErrorMessage>\n      )}\n    <Toaster position=\"top-right\" />\n    </>\n  )\n}\n\n"],"names":["axios","fetchTrendingMovies","response","data","results","fetchDetailsMovie","movieId","fetchSearchMovies","query","fetchReviews","fetchCredits","cast","ErrorMessage","lazy","MoviesList","Loader","Home","useState","isLoading","setIsLoading","error","setError","galleryPopularMovies","setGalleryPopularMovies","useEffect","popularMovies","length","toast","duration","fetchRequest","position"],"sourceRoot":""}